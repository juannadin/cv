{"version":3,"sources":["data/index.ts","components/Header/index.tsx","components/Body/Skills/index.tsx","components/Body/Experience/index.tsx","components/Body/Education/index.tsx","components/Body/ExtraMile/index.tsx","components/Body/Interests/index.tsx","components/Body/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","header","title","subtitle","about","motto","personalInfo","type","value","body","skills","soft","name","ammount","technical","languajes","experiences","company","description","startDate","endDate","educations","institution","degree","extraMiles","interests","Header","className","map","element","Skills","softSkill","techSkill","languaje","Experience","education","Education","ExtraMile","extraMile","Interests","interest","Body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.55493ae7.chunk.js","sourcesContent":["\nexport type Data = {\n  header: Header;\n  body: Body;\n};\n\nexport type Header = {\n  title: string;\n  subtitle: string;\n  about: string;\n  motto: string;\n  personalInfo: Array<PersonalInfo>;\n}\n\nexport type Body = {\n  skills: Skills;\n  experiences: Experiences;\n  educations: Educations;\n  extraMiles: ExtraMiles;\n  interests: Interests;\n}\n\nexport type Skills = {\n  soft: Array<Skill>;\n  technical: Array<Skill>;\n  languajes: Array<Skill>;\n}\n\nexport type Experiences = Array<Experience>\n\nexport type Educations = Array<Education>\n\nexport type ExtraMiles = Array<string>\n\nexport type Interests = Array<string>\n\ntype PersonalInfo = {\n  type: string;\n  value: string;\n};\n\ntype Skill = {\n  name: string;\n  ammount: number;\n};\n\ntype Experience = {\n  company: string;\n  title: string;\n  description: string;\n  startDate: string;\n  endDate: string;\n};\n\ntype Education = {\n  institution: string;\n  title: string;\n  degree: string;\n  startDate: string;\n  endDate: string;\n};\n\nconst data: Data = {\n  header: {\n    title: 'Juan Ignacio Nadin.',\n    subtitle: '[ Product Owner & Full Stack Developer ]',\n    about: 'I\\'m a data-driven, product-oriented and results-focused person, with +10 years of experience in the software industry. I understand that technology is no limitation for product design.',\n    motto: 'There\\'s always a way.',\n    personalInfo: [\n      {\n        type: 'Address',\n        value: 'Martinez, Buenos Aires, ARG',\n      },\n      {\n        type: 'Email',\n        value: 'juan.ignacio.nadin@gmail.com',\n      },\n      {\n        type: 'Cell',\n        value: '+54 11 6332-2736',\n      },\n    ],\n  },\n  body: {\n    skills: {\n      soft: [\n        {\n          name: 'Leadership',\n          ammount: 90,\n        },\n        {\n          name: 'Team Work',\n          ammount: 85,\n        },\n        {\n          name: 'Decision-making',\n          ammount: 90,\n        },\n        {\n          name: 'Time Management',\n          ammount: 80,\n        },\n        {\n          name: 'Communication',\n          ammount: 95,\n        },\n        {\n          name: 'Agile Development',\n          ammount: 80,\n        },\n      ],\n      technical: [\n        {\n          name: 'Node.js',\n          ammount: 95,\n        },\n        {\n          name: 'Express.js',\n          ammount: 90,\n        },\n        {\n          name: 'React.js',\n          ammount: 90,\n        },\n        {\n          name: 'Typescript',\n          ammount: 80,\n        },\n        {\n          name: 'AWS',\n          ammount: 75,\n        },\n        {\n          name: 'Unit & e2e testing',\n          ammount: 95,\n        },\n      ],\n      languajes: [\n        {\n          name: 'Spanish',\n          ammount: 100,\n        },\n        {\n          name: 'English',\n          ammount: 90,\n        },\n        {\n          name: 'Portuguesse',\n          ammount: 20,\n        },\n      ],\n    },\n    experiences: [\n      {\n        company: 'Mercado Libre',\n        title: 'Senior Full Stack Developer',\n        description: 'Full ownership of the entire development process. Product Desgin, strategic thinking, estimations and allocations, scrum agile development, production build and release, business tracking. Mentoring, asset hunting and screening.',\n        startDate: 'Nov 2016',\n        endDate: 'Present',\n      },\n      {\n        company: 'Wunderman',\n        title: 'Technology Lead',\n        description: 'Responsible of leading a development team. Leadership and management skills applied in a technical context with a developers squad. Projects estimations, mentoring and guidance, work stream and allocation',\n        startDate: 'Sep 2015',\n        endDate: 'Nov 2016',\n      },\n      {\n        company: 'Wunderman',\n        title: 'Senior Front End Developer',\n        description: 'Front-End web development for several clients such as ford.com, and lincoln.com. Javascript, HTML, CSS, XML, Freemarker and AEM plattforms, Through SVN & GIT. Desktop & Mobile.',\n        startDate: 'Jun 2012',\n        endDate: 'Aug 2015',\n      },\n      {\n        company: 'IBM',\n        title: 'Portal Web Developer',\n        description: 'BT/IT PartnerWorld Web Portal Producer. Maintenance and frontend development front-end IBM internal sites through CMS',\n        startDate: 'Dec 2010',\n        endDate: 'May 2012',\n      },\n    ],\n    educations: [\n      {\n        institution: 'Escuela de Arte Multimedial Da Vinci',\n        title: 'Web Design & Programming',\n        degree: 'Technical degree',\n        startDate: '2009',\n        endDate: '2012',\n      },\n      {\n        institution: 'Escuela San Ladislao',\n        title: 'Economy and Management',\n        degree: 'High School degree',\n        startDate: '2002',\n        endDate: '2004',\n      },\n    ],\n    extraMiles: [\n      'User Experience',\n      'Jira, Trello',\n      'Adobe Illustrator & Photoshop',\n      'Zeplin',\n      'SQL, AEM, PHP, jQuery',\n    ],\n    interests: [\n      'Music production',\n      'Composition',\n      'Guitar and Piano',\n      'Parenthood',\n      'Volleyball',\n    ],\n  }\n};\n\nexport default data;\n","import React, { FC } from 'react';\nimport { Header as HeaderProps } from '../../data';\n\nconst Header: FC<HeaderProps> = ({ title, subtitle, about, motto, personalInfo }) => (\n  <header className=\"header\">\n    <h1 className=\"header--title\">{title}</h1>\n    <h2 className=\"header--subtitle\">{subtitle}</h2>\n    <p className=\"header--about\">{about}</p>\n    <p className=\"header--motto\">{motto}</p>\n    <address>\n      <ul className=\"header--personal-info\">\n        {personalInfo.map((element) => (\n          <li><strong>{element.type}</strong> {element.value}</li>\n        ))}\n      </ul>\n    </address>\n  </header>\n);\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { Skills as SkillsProps } from '../../../data';\n\nconst Skills: FC<SkillsProps> = ({ soft, technical, languajes }) => (\n  <article>\n    <ul>\n      <h3>Soft Skills</h3>\n      {soft.map((softSkill) => (\n        <li>{softSkill.name}, {softSkill.ammount}</li>\n      ))}\n    </ul>\n    <ul>\n      <h3>Technical Skills</h3>\n      {technical.map((techSkill) => (\n        <li>{techSkill.name}, {techSkill.ammount}</li>\n      ))}\n    </ul>\n    <ul>\n      <h3>Languajes</h3>\n      {languajes.map((languaje) => (\n        <li>{languaje.name}, {languaje.ammount}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nexport default Skills;\n","import React, { FC } from 'react';\nimport { Experiences } from '../../../data';\n\ntype ExperienceProps = {\n  data: Experiences;\n}\n\nconst Experience: FC<ExperienceProps> = ({ data }) => (\n  <article>\n    <h3>Experience</h3>\n        {data.map((education) => (\n      <div>\n        <h4>{education.company}</h4>\n        <span>{education.startDate} to {education.endDate}</span>\n        <h5>{education.title}</h5>\n        <p>{education.description}</p>\n      </div>\n    ))}\n  </article>\n);\n\nexport default Experience;\n","import React, { FC } from 'react';\nimport { Educations } from '../../../data';\n\ntype EducationProps = {\n  data: Educations;\n};\n\nconst Education: FC<EducationProps> = ({ data }) => (\n  <article>\n    <h3>Education</h3>\n    {data.map((education) => (\n      <div>\n        <h4>{education.title}</h4>\n        <span>{education.startDate} to {education.endDate}</span>\n        <h5>{education.institution}</h5>\n        <p>{education.degree}</p>\n      </div>\n    ))}\n  </article>\n);\n\nexport default Education;\n","import React, { FC } from 'react';\nimport { ExtraMiles } from '../../../data';\n\ntype ExtraMileProps = {\n  data: ExtraMiles;\n}\n\nconst ExtraMile: FC<ExtraMileProps> = ({ data }) => (\n  <article>\n    <h3>Extra Mile Skills</h3>\n    <ul>\n      {data.map((extraMile) => (\n        <li>{extraMile}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nexport default ExtraMile;\n","import React, { FC } from 'react';\nimport { Interests as InterestData } from '../../../data';\n\ntype InterestsProps = {\n  data: InterestData;\n}\n\nconst Interests: FC<InterestsProps> = ({ data }) => (\n  <article>\n    <h3>Interests and Hobbies</h3>\n    <ul>\n      {data.map((interest) => (\n        <li>{interest}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nexport default Interests;\n","import React, { FC } from 'react';\nimport { Body as BodyProps } from '../../data';\nimport Skills from './Skills';\nimport Experience from './Experience';\nimport Education from './Education';\nimport ExtraMile from './ExtraMile';\nimport Interests from './Interests';\n\n\n\nconst Body: FC<BodyProps> = ({ skills, experiences, educations, extraMiles, interests }) => (\n  <main>\n    <Skills {...skills} />\n    <Experience data={experiences} />\n    <Education data={educations} />\n    <ExtraMile data={extraMiles} />\n    <Interests data={interests} />\n  </main>\n);\n\nexport default Body\n","import React from 'react';\nimport './styles/index.scss';\n\nimport data from './data';\nimport Header from './components/Header';\nimport Body from './components/Body';\n\nconst { header, body } = data;\n\nconst App = () => {\n  return (\n    <div className=\"cv\">\n      <Header {...header} />\n      <Body {...body} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}